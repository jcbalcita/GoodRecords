c
user.crates
user = User.find_by(id: current_user.id)
user = ng id: 139, album_id: 16, crate_id: 225, created_at: "2016-11-11 19:55:20", updated_at: "2016-11-11 19:55:20">
crating
user
c
@crates
c
user.crates
User.find_by(id: current_user.id)
@crates
crating
c
params
c
params
c
params
c
params
c
crate.albums
crate
craet
c
crate.cratings
crate.albums
crate.album
Crating.all
crate.albums
@albums
crate
c
Crate.all
crate
c
q
Crate.find(1)
crate
crate.albums
c
params
c
params
@crate
params
c
params
c
params
@review
c
params
@review
c
params
c
params
@review
c
params
@review
c
r.album
r = Review.find_by(id: params[:id])
Review.find_by(id: params[:id])
review
@album
c
@current_user_review.created_at.class
time_ago_in_words(Time.now - @current_user_review.created_at)
Time.now - @current_user_review.created_at
time_ago_in_words(@current_user_review.created_at)
c
time_ago_in_words(@current_user_review.created_at)
@current_user_review.created_at.class
@current_user_review
time_ago_in_words(@current_user_review.created_at)
@current_user_review.created_at
@current_user_review
c
@current_user_review[0]
@current_user_review
c
@reviews
c
@albums.to_json
@albums.to_JSON
@albums.empty?
@albums
c
a.albums
a = Album.find_by_status(current_user.id, params[:status])
a = #<ActiveRecord::Relation []>
Album.find_by_status(current_user.id, params[:status])
@albums
c
params
Album.find_by(id: params[:album_id]
status
c
Album.joins(:album_statuses).where('album_statuses.user_id  = ?', current_user.id).where('album_statuses.status = ?', params[:status])
Album.includes(:album_statuses).where('album_statuses.user_id  = ?', current_user.id).where('album_statuses.status = ?', params[:status])
      where('album_statuses.status = ?', params[:status])
Album.includes(:album_statuses).where('album_statuses.user_id  = ?', current_user.id).
a.map { |obj| Album.find_by(id: obj.album_id) }
a.map { |obj| Album.find_by(id: obj.album_id)
a.map { |obj| Album.find_by(album_id: obj.album_id) }
a = AlbumStatus.includes(:album).where(user_id: current_user.id)
AlbumStatus.includes(:album).where(user_id: current_user.id)
AlbumStatus.includes(:album).
AlbumStatus.includes(:album).where(user_id: current_user.id).album
AlbumStatus.includes(:album).where(user_id: current_user.id).select(:album_id)
AlbumStatus.includes(:album).where(user_id: current_user.id)
AlbumStatus.includes(:album).where(user_id: current_user.id).select(:album)
AlbumStatus.includes(:album).where(user_id: current_user.id).album
AlbumStatus.includes(:album).where(user_id: current_user.id)
AlbumStatus.first.album
AlbumStatus.includes(:album).where(user_id: current_user.id).select(:album)
AlbumStatus.includes(:album).where(user_id: current_user.id)
AlbumStatus.include(:album).where(user_id: current_user.id)[D
AlbumStatus.where(user_id: current_user.id)
AlbumStatus.where(user_id: current_user.id).album
c
AlbumStatus.where(user_id: current_user.id).albums
_.albums
AlbumStatus.where(user_id: current_user.id)
AlbumStatus.find_by(user_id: current_user.id)[D[D[D[D
params[:status]
q
